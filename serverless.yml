service: serverless-ml

#plugins:
#  - serverless-log-forwarding
#  - serverless-plugin-aws-alerts

provider:
  name: aws
  runtime: python3.6
  stage: ${env:ENV}
  memorySize: 128
  timeout: 60
  region: ${env:AWS_REGION}
  variableSyntax: "\\${(?!AWS::)((?:self|env):[ :a-zA-Z0-9._,\\-\\/\\(\\)]+?)}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: 
        - "*"
  stackTags:
    FRAMEWORK: serverless
  environment:
    ENV: ${env:ENV}
    LOGLEVEL: ${env:LOGLEVEL}
    REALM: ${env:REALM}

package:
  artifact: package/package.zip

#custom:
#  logForwarding:
#    destinationARN: {"Fn::ImportValue": "${env:SUMOLOGIC_LAMBDA_ARN_EXPORT_NAME}"}
#  alerts:
#    dashboards: true
#    topics:
#      ok: ${env:OPS_GENIE_MAJOR_SNS_ARN}
#      alarm: ${env:OPS_GENIE_MAJOR_SNS_ARN}
#      insufficientData: ${env:OPS_GENIE_MAJOR_SNS_ARN}
#    definitions:
#      functionErrors:
#        threshold: 10
#        period: 900
#      functionDuration:
#        threshold: 60000
#        statistic: 'p95'
#        period: 900
#    alarms:
#      - functionErrors
#      - functionThrottles
#      - functionInvocations
#      - functionDuration

functions:
  transform:
    handler: serverless_ml.transform
#    events:
#      - s3:
#          bucket: 
#          event: s3:ObjectCreated:*

resources:
  Resources: {}
  Outputs: {}
